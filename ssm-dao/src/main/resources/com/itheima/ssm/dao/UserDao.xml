<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.itheima.ssm.dao.UserDao">
    <!--查询所有用户列表-->
    <select id="findAllUsers" resultType="user">
        select * from `user`
    </select>

    <!--保存用户-->
    <insert id="saveUser" parameterType="user">
        INSERT INTO `user`(username,password,email,phoneNum,status)
        VALUES(#{username},#{password},#{email},#{phoneNum},#{status});
    </insert>

    <select id="findRolesPermissions" parameterType="long" resultType="permission">
         SELECT
                p.id,
                p.permissionName,
                p.url
           FROM
                role_permission rp
      LEFT JOIN permission p ON rp.permissionId = p.id
          WHERE rp.roleId = #{id}
    </select>
    <resultMap id="userRoleResultMap" type="user">
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <result column="email" property="email"></result>
        <result column="phoneNum" property="phoneNum"></result>
        <result column="status" property="status"></result>
        <!--用户与角色一对多关联-->
        <collection property="roleList" javaType="list" ofType="role">
            <id column="id" property="id"></id>
            <result column="roleName" property="roleName"></result>
            <result column="roleDesc" property="roleDesc"></result>
            <!--建立角色与权力一对多关系-->
            <collection property="permissionList" javaType="list" ofType="permission"
                        select="com.itheima.ssm.dao.UserDao.findRolesPermissions"
                        column="roleId">
            </collection>
        </collection>
    </resultMap>
    <!--根据id查询出用户及其拥有的角色-->
    <select id="findUserById" parameterType="long" resultMap="userRoleResultMap">
       SELECT u.`id`,
              u.`username`,
              u.`password`,
              u.`email`,
              u.`phoneNum`,
              u.`status` ,
	          r.`id` roleId,
	          r.`roleName`,
	          r.`roleDesc`
         FROM `user` u
    LEFT JOIN `user_role` ur ON ur.`userId` = u.`id`
    LEFT JOIN `role` r ON r.`id` = ur.`roleId`
        WHERE u.`id` = #{id}
    </select>

    <!--查询所有角色-->
    <select id="findAllRole" resultType="role">
        select * from `role`
    </select>

    <!--删除用户角色中间按表中的关系-->
    <delete id="delUserAndRole" parameterType="long">
        DELETE FROM `user_role` WHERE userId = #{id}
    </delete>

    <!--保存新的用户和角色中间表关系-->
    <insert id="addRoleToUser" parameterType="list">
        INSERT INTO `user_role`(userId,roleId)
        VALUES
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </insert>

    <!--根据用户名称查询用户-->
    <select id="findUserByName" parameterType="string" resultType="user">
        select * from `user` where username = #{username}
    </select>
</mapper>
